from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from keyboards.default.start import main_menu_kb
from states.user_states import ShopSearch
from database.connections import *

from loader import bot


router = Router()


@router.message(CommandStart())
async def start_command(message: Message, state: FSMContext):
    await state.clear()
    user_id, full_name, username = (
        message.from_user.id,
        message.from_user.first_name,
        message.from_user.username,
    )
    await add_user(user_id=user_id, full_name=full_name, username=username)
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–∞—à—É –≥—Ä—É–ø–ø—É? –¢–∞–º –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –ø–æ—Å—Ç—ã –æ –ø—Ä–æ–¥–∞–≤—Ü–∞—Ö –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—Å–Ω–æ–≤–µ ‚Äî @remove_scamming\n\n"
        "–ï—Å–ª–∏ –¥–∞ ‚Äî –∂–º–∏ /list"
    )
    await message.answer(text, reply_markup=main_menu_kb)


@router.message(Command("list"))
async def list_command(message: Message, state: FSMContext):
    await state.clear()
    scam_seller = Sellers.select().where(Sellers.status == "scam").order_by(Sellers.index)
    trusted_seller = Sellers.select().where(Sellers.status == "trusted").order_by(Sellers.index)

    scam_text = "\n".join([f"{shop.index}. {shop.username}" for i, shop in enumerate(scam_seller)])
    trusted_text = "\n".join([f"{shop.index}. {shop.username}" for i, shop in enumerate(trusted_seller)])

    response = (
        "–ú–û–ñ–ù–û –î–û–í–ï–†–Ø–¢–¨ ‚úÖ\n\n"
        f"{trusted_text if trusted_text else '–ü—É—Å—Ç–æ'}"
    )

    await message.answer(response)


@router.message(F.text == "üîç –ù–∞–π—Ç–∏ –º–∞–≥–∞–∑–∏–Ω")
async def ask_shop_name(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏–ª–∏ –µ–≥–æ @username:")
    await state.set_state(ShopSearch.name)


@router.message(ShopSearch.name)
async def search_shop(message: Message, state: FSMContext):
    query = message.text.strip().lower()

    # Search by username or name
    shop = Shops.select().where(
        (Shops.username == query) | (Shops.name.contains(query))
    ).first()

    if shop:
        status_text = {
            "trusted": "‚úÖ –ú–∞–≥–∞–∑–∏–Ω—É –ú–û–ñ–ù–û –¥–æ–≤–µ—Ä—è—Ç—å!",
            "scam": "‚ùå –≠–¢–û –°–ö–ê–ú! –ù–ï–õ–¨–ó–Ø –¥–æ–≤–µ—Ä—è—Ç—å!"
        }.get(shop.status, "–°—Ç–∞—Ç—É—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω.")
        response = (
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {shop.name}\n"
            f"Username: {shop.username}\n"
            f"{status_text}"
        )
        await state.clear()
    else:
        response = "‚ö†Ô∏è –ú–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        await state.set_state(ShopSearch.name)

    await message.answer(response)
